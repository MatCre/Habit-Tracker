{"ast":null,"code":"import _objectSpread from \"C:/Users/MathewV2/Documents/Coding/Habit-Tracker/habit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:/Users/MathewV2/Documents/Coding/Habit-Tracker/habit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/MathewV2/Documents/Coding/Habit-Tracker/habit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/MathewV2/Documents/Coding/Habit-Tracker/habit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/MathewV2/Documents/Coding/Habit-Tracker/habit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\MathewV2\\\\Documents\\\\Coding\\\\Habit-Tracker\\\\habit-tracker\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport HabitCard from './HabitCard';\nimport AddHabitForm from './AddHabitForm';\nimport Header from './Header';\nimport WeeklyTracker from './WeeklyTracker';\nimport sampleHabits from '../sampleHabits';\nimport '../Sass/app.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      habits: {},\n      habitStack: {},\n      weeklyTrack: {\n        Sun: 0,\n        Mon: 0,\n        Tue: 0,\n        Wed: 0,\n        Thu: 0,\n        Fri: 0,\n        Sat: 0\n      }\n    };\n\n    _this.addHabit = function (habit) {\n      //1. Take a copy of the exhisting state\n      var habits = _objectSpread({}, _this.state.habits); //2. Add our new habit to that variable\n\n\n      habits[\"habit\".concat(Date.now())] = habit; //3. set the new fishes object to state\n\n      _this.setState({\n        habits: habits\n      });\n    };\n\n    _this.addToHabitStack = function (key) {\n      //This is the key passed in from a button element press\n      var keyPassedIn = key; //This is a copy of the refrence of that key from the state where it exhists\n\n      var theHabitIWantToAddToTheStack = _objectSpread({}, _this.state.habits[keyPassedIn]); // Making a copy of the second state i have\n\n\n      var habitStack = _objectSpread({}, _this.state.habitStack); //setting the key to the matching habit i refrenced above\n\n\n      habitStack[key] = theHabitIWantToAddToTheStack; //setting the value to true in the new state (for dynamic text)\n\n      habitStack[key].added = true; //updating the second state with the new copy.\n\n      _this.setState({\n        habitStack: habitStack\n      });\n    };\n\n    _this.updateCurrentDaysHabitCounter = function () {\n      //Get the day\n      var today = new Date(Date.now()).getDay(); //Copy the state of weeklyTrack\n\n      var weeklyTrack = _objectSpread({}, _this.state.weeklyTrack); //Get the value of the array value i want to incremenet\n\n\n      console.log(weeklyTrack[Sun]);\n      var valueToIncrement = weeklyTrack[today]; //Increment that value\n\n      valueToIncrement++; //Set todays value to that incremented value \n\n      weeklyTrack[today] = valueToIncrement; //Set the state of weekly track to the new values.\n      // this.setState({ weeklyTrack })\n    };\n\n    _this.completeHabitInHabitStack = function (key) {\n      //1. take a copy of the habitStack state\n      var habitStack = _objectSpread({}, _this.state.habitStack); //increment today habit counter\n\n\n      _this.updateCurrentDaysHabitCounter(); //2. remove this habits [key] from that copy\n\n\n      delete habitStack[key]; //3. update the state of habit stack\n\n      _this.setState({\n        habitStack: habitStack\n      });\n    };\n\n    _this.loadSampleHabits = function () {\n      console.log('loading sample habits');\n\n      _this.setState({\n        habits: sampleHabits\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var localStorageRef1 = localStorage.getItem('habitStack');\n      var localStorageRef2 = localStorage.getItem('weeklyTrack');\n\n      if (localStorageRef1) {\n        this.setState({\n          habitStack: JSON.parse(localStorageRef1)\n        });\n      }\n\n      if (localStorageRef2) {\n        this.setState({\n          weeklyTrack: JSON.parse(localStorageRef2)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem('habitStack', JSON.stringify(this.state.habitStack));\n      localStorage.setItem('weeklyTrack', JSON.stringify(this.state.weeklyTrack));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"habit-tracker\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"habits\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            loadSampleHabits: this.loadSampleHabits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"habit-list\",\n            children: Object.keys(this.state.habits).map(function (key) {\n              return /*#__PURE__*/_jsxDEV(HabitCard, {\n                details: _this2.state.habits[key],\n                addToHabitStack: _this2.addToHabitStack,\n                index: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, _this2);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AddHabitForm, {\n            addHabit: this.addHabit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stack-wrap\",\n          children: Object.keys(this.state.habitStack).map(function (key) {\n            return /*#__PURE__*/_jsxDEV(HabitCard, {\n              details: _this2.state.habitStack[key],\n              index: key,\n              added: _this2.state.habitStack[key].added,\n              completeHabitInHabitStack: _this2.completeHabitInHabitStack\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracker-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(WeeklyTracker, {\n            weeklyTrack: this.state.weeklyTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MathewV2/Documents/Coding/Habit-Tracker/habit-tracker/src/components/App.js"],"names":["React","HabitCard","AddHabitForm","Header","WeeklyTracker","sampleHabits","App","state","habits","habitStack","weeklyTrack","Sun","Mon","Tue","Wed","Thu","Fri","Sat","addHabit","habit","Date","now","setState","addToHabitStack","key","keyPassedIn","theHabitIWantToAddToTheStack","added","updateCurrentDaysHabitCounter","today","getDay","console","log","valueToIncrement","completeHabitInHabitStack","loadSampleHabits","localStorageRef1","localStorage","getItem","localStorageRef2","JSON","parse","setItem","stringify","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HabitCard from './HabitCard';\r\nimport AddHabitForm from './AddHabitForm';\r\nimport Header from './Header';\r\nimport WeeklyTracker from './WeeklyTracker';\r\nimport sampleHabits from '../sampleHabits';\r\nimport '../Sass/app.scss';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        habits: {},\r\n        habitStack: {},\r\n        weeklyTrack: {Sun: 0,\r\n            Mon: 0,\r\n            Tue: 0,\r\n            Wed: 0,\r\n            Thu: 0,\r\n            Fri: 0,\r\n            Sat: 0\r\n    }\r\n}\r\n\r\n    componentDidMount() {\r\n        const localStorageRef1 = localStorage.getItem('habitStack');\r\n        const localStorageRef2 = localStorage.getItem('weeklyTrack');\r\n        if(localStorageRef1) {\r\n            this.setState({habitStack: JSON.parse(localStorageRef1)});\r\n        }\r\n        if(localStorageRef2) {\r\n            this.setState({weeklyTrack: JSON.parse(localStorageRef2)});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() { \r\n\r\n        localStorage.setItem('habitStack', JSON.stringify(this.state.habitStack));\r\n        localStorage.setItem('weeklyTrack', JSON.stringify(this.state.weeklyTrack));\r\n    }\r\n\r\n    addHabit = (habit) => {\r\n        //1. Take a copy of the exhisting state\r\n        const habits = {...this.state.habits};\r\n        //2. Add our new habit to that variable\r\n        habits[`habit${Date.now()}`] = habit;\r\n        //3. set the new fishes object to state\r\n        this.setState({habits,})\r\n    }\r\n\r\n    addToHabitStack = (key) => {\r\n        //This is the key passed in from a button element press\r\n        const keyPassedIn = key\r\n        //This is a copy of the refrence of that key from the state where it exhists\r\n        const theHabitIWantToAddToTheStack = {...this.state.habits[keyPassedIn]}\r\n        // Making a copy of the second state i have\r\n        const habitStack = {...this.state.habitStack};\r\n        //setting the key to the matching habit i refrenced above\r\n        habitStack[key] = theHabitIWantToAddToTheStack;\r\n        //setting the value to true in the new state (for dynamic text)\r\n        habitStack[key].added = true;\r\n        //updating the second state with the new copy.\r\n        this.setState({ habitStack })\r\n\r\n    };\r\n\r\n    updateCurrentDaysHabitCounter = () => {\r\n        //Get the day\r\n        const today = new Date(Date.now()).getDay();\r\n        //Copy the state of weeklyTrack\r\n        const weeklyTrack = {...this.state.weeklyTrack}\r\n        //Get the value of the array value i want to incremenet\r\n        console.log(weeklyTrack[Sun]);\r\n        let valueToIncrement = weeklyTrack[today];\r\n        //Increment that value\r\n        valueToIncrement ++\r\n        //Set todays value to that incremented value \r\n        weeklyTrack[today] = valueToIncrement;\r\n        //Set the state of weekly track to the new values.\r\n        // this.setState({ weeklyTrack })\r\n\r\n\r\n\r\n    }\r\n\r\n    completeHabitInHabitStack = (key) => {\r\n        //1. take a copy of the habitStack state\r\n        const habitStack = {...this.state.habitStack};\r\n        //increment today habit counter\r\n        this.updateCurrentDaysHabitCounter();\r\n        //2. remove this habits [key] from that copy\r\n        delete habitStack[key]\r\n        //3. update the state of habit stack\r\n        this.setState({habitStack});\r\n    }\r\n\r\n    loadSampleHabits = () => {\r\n        console.log('loading sample habits')\r\n        this.setState({habits: sampleHabits})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"habit-tracker\">\r\n                <div className=\"habits\">\r\n                    <Header loadSampleHabits={this.loadSampleHabits}/>\r\n                    <ul className=\"habit-list\">\r\n                      {Object.keys(this.state.habits).map(key =>\r\n                        <HabitCard\r\n                        key={key} \r\n                        details={this.state.habits[key]}\r\n                        addToHabitStack={this.addToHabitStack}\r\n                        index={key}\r\n                        />)}\r\n                    </ul>\r\n                    <AddHabitForm addHabit={this.addHabit}/>\r\n                </div>\r\n                <div className=\"stack-wrap\"> \r\n                    {Object.keys(this.state.habitStack).map(key =>\r\n                        <HabitCard\r\n                        key={key} \r\n                        details={this.state.habitStack[key]}\r\n                        index={key}\r\n                        added={this.state.habitStack[key].added}\r\n                        completeHabitInHabitStack={this.completeHabitInHabitStack}\r\n                        />)}\r\n                </div>\r\n                <div className=\"tracker-wrapper\">\r\n                    <WeeklyTracker\r\n                    weeklyTrack={this.state.weeklyTrack}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}